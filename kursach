public class LoginMenu extends JFrame {

    JTextField usernameField = new JTextField(15);
    JPasswordField passwordField = new JPasswordField(15);

    private void checker(String username, String password)
    {
        SQLDatabaseConnection.usersRefresh();
        int checker = 0;
        for (User user : SQLDatabaseConnection.usersList) {
            System.out.println(username);
            System.out.println(password);

            if ((Objects.equals(user.getUsername(), username))==true && (Ob-jects.equals(user.getPassword(), password))==true) {
                checker = 1;
                setVisible(false);

                if (user.isAdmin() ==true) {
                    new MainMenu(1);
                }
                else
                {
                    new MainMenu(0);
                }
            }
        }
        if(checker==0)
        {
            JOptionPane.showMessageDialog(null,"Неверные данные!", "Ошибка!", JOption-Pane.WARNING_MESSAGE);
        }
    }
    public LoginMenu(){
        super("Login");

        setDefaultCloseOperation( EXIT_ON_CLOSE );
        setLocation(700, 200);
        setSize(500,180);
        JPanel panel = new JPanel();
        GridBagLayout layout = new GridBagLayout();
        panel.setLayout(layout);
        GridBagConstraints gbc = new GridBagConstraints();

        JLabel label1 = new JLabel("Логин:");
        JLabel label2 = new JLabel("Пароль:");

        usernameField.setToolTipText("Логин");
        passwordField.setToolTipText("Пароль");
        passwordField.setEchoChar('*');

        JPanel grid = new JPanel(new GridLayout(3, 2, 5, 0) );
        JButton button = new JButton("Войти");

        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String username = usernameField.getText();
                String password = passwordField.getText();

                checker(username,password);
            }
        });

        gbc.fill = GridBagConstraints.HORIZONTAL;

        gbc.gridx = 0;
        gbc.gridy = 0;
        panel.add(label1, gbc);

        gbc.gridx = 1;
        gbc.gridy = 0;
        panel.add(usernameField, gbc);

        gbc.gridx = 0;
        gbc.gridy = 1;
        panel.add(label2, gbc);

        gbc.gridx = 1;
        gbc.gridy = 1;
        panel.add(passwordField, gbc);

        gbc.gridx = 1;
        gbc.gridy = 2;
        panel.add(button, gbc);

        add(panel);

        setVisible(true);
    }
}










7.2	 Main ()

public class Main {

    public static void main(String[] args) {
        
        new LoginMenu();
        
    }
}
7.3MainMenu 
public class MainMenu extends JFrame
{
    JButton oneTButton = new JButton("Автомобили");
    JButton twoTButton = new JButton("Работы");
    JButton threeTButton = new JButton("Ремонты");
    JButton fourTButton = new JButton("Маршруты");
    JButton fiveTButton = new JButton("Поездки");
    public MainMenu(int isAdmin) {
        super("Главное меню");
        setSize(500,500);
        setLocation(700, 200);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        JPanel panel = new JPanel();
        GridBagLayout layout = new GridBagLayout();
        panel.setLayout(layout);
        GridBagConstraints gbc = new GridBagConstraints();

        oneTButton.setPreferredSize(new Dimension(160,120));
        twoTButton.setPreferredSize(new Dimension(160,120));
        threeTButton.setPreferredSize(new Dimension(160,120));
        fourTButton.setPreferredSize(new Dimension(160,120));
        fiveTButton.setPreferredSize(new Dimension(160,120));

        SQLDatabaseConnection.get_cars();
        SQLDatabaseConnection.get_repair();
        SQLDatabaseConnection.get_trip();

        gbc.fill = GridBagConstraints.HORIZONTAL;

        gbc.gridx = 0;
        gbc.gridy = 0;
        panel.add(oneTButton, gbc);

        gbc.gridx = 3;
        gbc.gridy = 0;
        panel.add(twoTButton, gbc);

        gbc.gridx = 0;
        gbc.gridy = 1;
        panel.add(threeTButton, gbc);

        gbc.gridx = 3;
        gbc.gridy = 1;
        panel.add(fourTButton, gbc);

        gbc.gridx = 1;
        gbc.gridy = 2;
        panel.add(fiveTButton, gbc);


        oneTButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new CarsTable(isAdmin);
            }
        });

        twoTButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new ServicesTable(isAdmin);
            }
        });

        threeTButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new RepairsTable(isAdmin);
            }
        });

        fourTButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new TripsTable(isAdmin);
            }
        });

        fiveTButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new RidesTable(isAdmin);
            }
        });



        add(panel);
        setVisible(true);
    }


}


7.4	AddCarMenu

public class AddCarMenu extends JFrame {

    JLabel label2 = new JLabel("Гос. номер:");
    JLabel label3 = new JLabel("Бренд:");
    JLabel label4 = new JLabel("Тип:");
    JLabel label5 = new JLabel("Цвет:");

    public AddCarMenu()
    {
        super("Добавление");
        setSize(500,200);
        JPanel panel = new JPanel();
        GridBagLayout layout = new GridBagLayout();
        panel.setLayout(layout);
        GridBagConstraints gbc = new GridBagConstraints();

        JTextField gos_num = new JTextField(10);
        JTextField brand = new JTextField(10);
        JTextField type = new JTextField(10);
        JTextField color = new JTextField(10);

        /*
        DateFormat date = new SimpleDateFormat("yyyy-MM-dd");
        DateFormatter dateFormatter = new DateFormatter(date);
        dateFormatter.setAllowsInvalid(false);
        dateFormatter.setOverwriteMode(true);

        JFormattedTextField ftfDate = new JFormattedTextField(dateFormatter);
        ftfDate.setColumns(10);
        ftfDate.setValue(new Date());
         */

        JButton add = new JButton("Добавить Легковую");
        JButton add2 = new JButton("Добавить Грузовую");

        // Put constraints on different buttons
        gbc.fill = GridBagConstraints.HORIZONTAL;

        gbc.gridx = 0;
        gbc.gridy = 2;
        panel.add(label2, gbc);

        gbc.gridx = 1;
        gbc.gridy = 2;
        panel.add(gos_num, gbc);

        gbc.gridx = 0;
        gbc.gridy = 3;
        panel.add(label3, gbc);

        gbc.gridx = 1;
        gbc.gridy = 3;
        panel.add(brand, gbc);

        gbc.gridx = 0;
        gbc.gridy = 4;
        panel.add(label5, gbc);

        gbc.gridx = 1;
        gbc.gridy = 4;
        panel.add(color, gbc);

        gbc.gridx = 0;
        gbc.gridy = 5;
        panel.add(add, gbc);
        gbc.gridx = 1;
        gbc.gridy = 5;
        panel.add(add2, gbc);


        add.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                String number = gos_num.getText();
                String _brand = brand.getText();
                String _type = type.getText();
                String _color = color.getText();
                System.out.println(_type);

                if (Validation.isGosNum(number) == true) {
                    if (Validation.isLetters(_color)==true) {
                        String query = "Insert into Car (Number, Brand, Type_P_C, Color) values ('"+number+"','"+_brand+"','P','"+_color+"')";
                        SQLDatabaseConnection.insert_row(query);
                        setVisible(false);
                        CarsTable.refresh();
                        JOptionPane.showMessageDialog(null,"Объект добавлен!","Готово!",JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Неверный цвет!", "Ошибка!", JOption-Pane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Неверный Гос. Номер!", "Ошибка!", JOp-tionPane.ERROR_MESSAGE);
                }
            }
        });

        add2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                String number = gos_num.getText();
                String _brand = brand.getText();
                String _type = type.getText();
                String _color = color.getText();
                System.out.println(_type);

                if (Validation.isGosNum(number) == true) {
                    if (Validation.isLetters(_color)) {
                        String query = "Insert into Car (Number, Brand, Type_P_C, Color) values ('"+number+"','"+_brand+"','C','"+_color+"')";
                        SQLDatabaseConnection.insert_row(query);
                        setVisible(false);
                        CarsTable.refresh();
                        JOptionPane.showMessageDialog(null,"Объект добавлен!","Готово!",JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Неверный цвет!", "Ошибка!", JOption-Pane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Неверный Гос. Номер!", "Ошибка!", JOp-tionPane.ERROR_MESSAGE);
                }
            }
        });

    add(panel);
    setVisible(true);
    }
}
